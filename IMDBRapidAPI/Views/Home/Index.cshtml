@model IPagedList<MovieViewModel>


@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}

<table class="table table-striped align-middle">
    <thead>
        <tr>
            <th scope="col">Rank</th>
            <th scope="col"></th>
            <th scope="col">Movie</th>
            <th scope="col">Rating</th>
            <th scope="col">Year</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <th scope="row">@item.Rank</th>
                <td>
                    <img src="@item.Thumbnail" />
                </td>
                <td>@item.Title</td>
                <td>@item.Rating</td>
                <td>@item.Year</td>
            </tr>
        }
    </tbody>
</table>
<div class="d-flex justify-content-center">
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
{
    DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
    DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always,
    DisplayLinkToIndividualPages = true,
    DisplayPageCountAndCurrentLocation = false,
    MaximumPageNumbersToDisplay = 5,
    ClassToApplyToFirstListItemInPager = "page-item",
    ClassToApplyToLastListItemInPager = "page-item",
    LinkToPreviousPageFormat = "Previous",
    LinkToNextPageFormat = "Next",
    LinkToLastPageFormat = "Last",
    ContainerDivClasses = new[] { "pagination" },
    UlElementClasses = new[] { "pagination" },
    LiElementClasses = new[] { "page-item" },
    PageClasses = new[] { "page-link" }
})
</div>